1- Find the titles of all movies directed by Steven Spielberg.

SELECT title
FROM movie
WHERE director = 'Steven Spielberg';

| title                   |
| :---------------------: |
| E.T.                    |
| Raiders of the Lost Ark |

2- Find all years that have a movie that received a rating of 4 or 5, and sort them in increasing order. 

SELECT DISTINCT title, year
FROM rating, movie
WHERE rating.mID = movie.mID AND stars = '4' OR '5'
ORDER BY year;

| title                   | year  |
| :---------------------: |:-----:|
| Snow White              | 1937  |
| Gone with the Wind      | 1939  |
| The Sound of Music      | 1965  |
| Star Wars               | 1977  |
| Raiders of the Lost Ark | 1981  |
| E.T.                    | 1982  |
| Titanic                 | 1997  |
| Avatar                  | 2009  |

3- Find the titles of all movies that have no ratings.

SELECT title
FROM movie
WHERE mID NOT IN (SELECT mID FROM rating);

| title      |
| :--------: |
| Star Wars  |
| Titanic    |

4- Some reviewers didn't provide a date with their rating. Find the names of all reviewers who have ratings with a NULL value for the date. 

SELECT name
FROM reviwer
INNER JOIN rating USING (rID)
WHERE ratingDate IS NULL;

| name             |
| :--------------: |
| Daniel Lewis     |
| Chris Jackson    |

5- Write a query to return the ratings data in a more readable format: reviewer name, movie title, stars, and ratingDate. Also, sort the data, first by reviewer name, then by movie title, and lastly by number of stars. 

SELECT name, title, stars, ratingDate
FROM movie, rating, reviewer
WHERE movie.mID = rating.mID AND reviewer.rID = rating.rID
ORDER BY name, title, stars;

| name                   | title                   | stars   | ratingDate |                  
| :--------------------: | :---------------------: | :-----: | :--------: |
| Ashely White           | E.T.                    | 3       | 2011-01-02 |                  
| Brittany Harris        | Raider of the Lost Ark  | 2       | 2011-01-30 |                  
| Brittany Harris        | Raider of the Lost Ark  | 4       | 2011-01-12 |                  
| Brittany Harris        | The Sound of Music      | 2       | 2011-01-20 |                  
| Chris Jackson          | E.T.                    | 2       | 2011-01-22 |                  
| Chris Jackson          | Raider of the Lost Ark  | 4       | null       |                  
| Chris Jackson          | The Sound of Music      | 3       | 2011-01-27 |                  
| Daniel Lewis           | Snow White              | 4       | null       |                  
| Elizabeth Thomas       | Avatar                  | 3       | 2011-01-15 |
| Elizabeth Thomas       | Snow White              | 5       | 2011-01-19 |                  
| James Cameron          | Avatar                  | 5       | 2011-01-20 |                  
| Mike Anderson          | Gone with the Wind      | 3       | 2011-01-09 |                  
| Sarah Martinez         | Gone with the Wind      | 2       | 2011-01-22 |                  
| Sarah Martinez         | Gone with the Wind      | 4       | 2011-01-27 | 

6- For all cases where the same reviewer rated the same movie twice and gave it a higher rating the second time, write a query which returns the reviewer's name and the title of the movie. 

SELECT name, title
FROM movie
INNER JOIN rating r1 USING(mID)
INNER JOIN rating r2 USING(rID, mID)
INNER JOIN reviewer USING(rID)
WHERE r1.ratingDate < r2.ratingDate AND r1.stars < r2.stars;

| name                   | title                   |                 
| :--------------------: | :---------------------: |
| Sarah Martinez         | Gone with the Wind      |

7- For each movie that has at least one rating, find the highest number of stars that movie received. Return the movie title and number of stars. Sort by movie title. 

SELECT name, MAX(stars)
FROM movie
INNER JOIN rating r1 USING(mID)
GROUP BY mID
ORDER BY title;

| title                   | MAX(stars)   |                  
| :---------------------: | :----------: |
| Avatar                  | 5            |                 
| E.T.                    | 3            |                 
| Gone with the Wind      | 4            |                  
| Raider of the Lost Ark  | 4            |                 
| Snow White              | 5            |                 
| The Sound of Music      | 3            |   

8- For each movie, return the title and the 'rating spread', that is, the difference between highest and lowest ratings given to that movie. Sort by rating spread from highest to lowest, then by movie title. 

SELECT title, (MAX(stars)-MIN(stars)) AS rating_spread
FROM movie
INNER JOIN rating USING(mID)
GROUP BY mID
ORDER BY rating_spread DESC, title;

| title                   | rating_spread   |                  
| :---------------------: | :-------------: |
| Avatar                  | 2               |                 
| Gone with the Wind      | 2               |                 
| Raider of the Lost Ark  | 2               |                  
| E.T.                    | 1               |                 
| Snow White              | 1               |                 
| The Sound of Music      | 1               |
