Q1: Find the names of all professors who are not students but took at least one course.
    
    /* Profs who are students */
    SELECT DISTINCT prof.pID, prof.lastname
    FROM prof, student
    WHERE prof.pID IN
    (
      SELECT sID
      FROM student
    )
    ORDER BY pID;
    
    | pID   | lastname |
    | :---: | :------: |
    | 058   | Sarvello |
    | 115   | Brugman  |
    | 345   | Ahmed    |
    | 798   | Schwartz |
    | 987   | Cassidy  |
    
    /* Profs who are not students */
    SELECT DISTINCT prof.pID, prof.lastname
    FROM prof, student
    WHERE pID NOT IN
    (
      SELECT sID
      FROM student
    )
    ORDER BY pID;
    
    | pID   | lastname |
    | :---: | :------: |
    | 004   | Anders   |
    | 204   | Domingo  |
    | 454   | Sager    |
    | 683   | Hu       |
    | 837   | King     |
    
Q2: Find the sID and names of all students who are not in the CS department who took a CS course.  Also find the cnum and name the course and the secnum, term, and grade the student received.
    
    SELECT DISTINCT sID, firstname, lastname, se.cnum
    FROM student st, report r, section se
    WHERE st.dept = 'CS' AND st.sID = r.snum AND r.secnum = se.secnum AND se.cnum LIKE 'CSC%';
 
    | sID   | lasttname | dept  | cnum    | name                                               | secnum | term  | grade |
    | :---: | :-------: | :---: | :-----: | :------------------------------------------------: | :----: | :---: | :---: |
    | 019   | Pierce    | GOVT  | CSC330  | Topics in Information Systems                      | 3456   | F18   | I     |
    | 111   | Belailef  | ENG   | CSC111  | Introduction to Computing and Computer Programming | 6789   | F17   | A     |
    | 111   | Belailef  | ENG   | CSC211  | Data Structures                                    | 2597   | F17   | A     |
    | 111   | Belailef  | ENG   | CSC211  | Data Structures                                    | 5387   | F16   | B     |
    | 111   | Belailef  | ENG   | CSC330  | Topics in Information Systems                      | 8702   | F18   | A     |
    | 123   | Mutai     | GOVT  | CSC330  | Topics in Information Systems                      | 1234   | S16   | A     |
    | 123   | Mutai     | GOVT  | CSC330  | Topics in Information Systems                      | 3456   | F18   | I     |
    | 444   | Radcliffe | RUSS  | CSC211  | Data Structures                                    | 5387   | S16   | F     |
    | 555   | Springer  | ENGL  | CSC211  | Data Structures                                    | 5387   | S16   | A     |
    | 555   | Springer  | ENGL  | CSC228  | Introduction to Discrete Mathematics               | 4195   | S18   | I     |
    | 777   | Belailef  | ENGL  | CSC228  | Introduction to Discrete Mathematics               | 4195   | S18   | A     |
    | 777   | Belailef  | ENGL  | CSC231  | Microcomputers and assembly language               | 7777   | S18   | F     |
    | 777   | Belailef  | ENGL  | CSC424  | Introduction to Database Systems                   | 4190   | S21   | I     |
    | 777   | Belailef  | ENGL  | CSC715  | Database Theory                                    | 4195   | F21   | C     |
    | 798   | Lincoln   | GOVT  | CSC211  | Data Structures                                    | 9023   | S21   | A     |
    | 798   | Lincoln   | GOVT  | CSC733  | Natural Language Processing                        | 7777   | F18   | B     |
    | 987   | Stewart   | PE    | CSC330  | Topics in Information Systems                      | 1234   | S16   | B     |
    | 987   | Stewart   | PE    | CSC424  | Introduction to Database Systems                   | 4190   | F21   | A     |
    | 987   | Stewart   | PE    | CSC715  | Database Theory                                    | 4195   | F21   | F     |

Q3: Find the names of all students who have taken every CS course
 
    SELECT firstname, lastname
    FROM student
    INNER JOIN report ON student.sID = report.snum
    WHERE snum IN
    (
      SELECT secnum
      FROM report
      WHERE report.secnum LIKE 'CSC%'
    );
    
    | firstname | lastname |
    | :-------: | :------: |
    |           |          |
 
Q4: Find the names of all students all of whose grades are better than 'C'
    
    SELECT *
    FROM report
    WHERE grade < 'C' AND grade >= 'A'
    ORDER BY snum, grade;
    
    | snum  | secnum | term  | grade | 
    | :---: | :----: | :---: | :---: | 
    | 019   | 2804   | F35   | A     |
    | 111   | 2597   | F17   | A     |
    | 111   | 6789   | F17   | A     |
    | 111   | 8702   | F18   | A     | 
    | 111   | 5387   | S16   | B     |
    | 123   | 1234   | S16   | A     | 
    | 345   | 2597   | F17   | A     | 
    | 345   | 7777   | F18   | A     |
    | 555   | 5387   | S16   | A     |
    | 777   | 4195   | S18   | A     |
    | 798   | 9023   | S21   | A     | 
    | 798   | 7777   | F18   | B     |
    | 987   | 2804   | S21   | A     | 
    | 987   | 4190   | F21   | A     | 
    | 987   | 1234   | S16   | B     | 
 
Q5: Find two students who each took at least two identical courses (possibly different sections) in the same department and who got the same grade in the lower-level course but different grades in the higher level course.
    
    SELECT DISTINCT c1.cnum as course1, c1.level as lev1, c2.cnum as course2, c2.level as lev2, stu1.sID as stu1ID, stu1.lastname as stu1Name, stu2.sID as stu2ID, stu2.lastname as stu2Name, 
    r11.secnum as stu1sec1,r11.term as stu1sec1term,r11.grade as stu1_grade1, r12.secnum as stu1sec2,r12.term as stu1sec2term, r12.grade as stu1_grade2, r21.secnum as stu2sec1, r21.term as stu2sec1term21, r21.grade as stu2_grade1,
    r22.secnum as stu2sec2, r22.term as stu2term2, r22.grade as stu2_grade2 
    FROM course c1,course c2, student stu1, report r11, section s11, report r12, section s12, student stu2, report r21, section s21, report r22, section s22 
    WHERE stu1.sID < stu2.sID      /* different students */
    and stu1.sID = r11.snum		/* stu1 report on lower level course C1 */
    and r11.secnum = s11.secnum
    and r11.term = s11.term 
    and s11.cnum = c1.cnum
    and stu1.sID = r12.snum       /* stu1 report on higher level course C2 */
    and r12.secnum = s12.secnum
    and r12.term = s12.term 
    and s12.cnum = c2.cnum
    and stu2.sID = r21.snum		/* stu2 report on lower level course C1*/
    and r21.secnum = s21.secnum
    and r21.term = s21.term 
    and s21.cnum = c2.cnum
    and stu2.sID = r22.snum    /* stu1 report on higher level course C2 */
    and r22.secnum = s22.secnum
    and r22.term = s22.term 
    and s22.cnum = c2.cnum
    and c1.dept = c2.dept
    and c2.level > c1.level
    and c1.cnum = s11.cnum
    and c2.cnum = s22.cnum
    and r11.grade = r21.grade
    and r12.grade < r22.grade
    ORDER BY stu1.Sid;
    
    /* Table oo large to make table*/
    
Q6: Find the course numbers and names of all courses taken by at least one student who has taken CSC424
 
    SELECT C.Cnum, C.Name
    FROM Course C
    WHERE Cnum IN
    (
        SELECT DISTINCT sec.Cnum
        FROM   section sec
        WHERE  sec.secnum IN (
                                SELECT r1.secnum
                                FROM   report r1
                                WHERE  r1.snum IN (
                                                    SELECT r2.snum
                                                    FROM   report r2
                                                    WHERE  r2.secnum in (
                                                                            SELECT sec2.secnum
			                                                                FROM Section sec2
                                                                            WHERE sec2.Cnum = 'CSC424'
                                                                        )
                                                   )
                             )
    )
    ORDER BY Cnum;

    
    | cnum   | name                                 |
    | :----: | :----------------------------------: |
    | CSC211 | Data Structures                      |
    | CSC228 | Introduction to Discrete Mathematics |
    | CSC231 | Microcomputers and assembly language |
    | CSC330 | Topics in Information Systems        |
    | CSC424 | Introduction to Database Systems     |
    | CSC715 | Database Theory                      |
    | CSC733 | Natural Language Processing          |
    | GOV100 | Introduction to Political Sciencce   |
    | MTH153 | Introduction to Discrete Mathematics |

Q7: Find all students who took two courses in the same department and got a better grade in the higher-level course
    
    SELECT distinct c1.cnum as course1, c1.level as lev1, c2.cnum as course2, c2.level as lev2, c2.dept AS dept, stu1.sID as stu1ID, stu1.lastname as stu1Name,  
    r11.secnum as stu1sec1,r11.term as stu1sec1term,r11.grade as stu1_grade1, r12.secnum as stu1sec2,r12.term as stu1sec2term, r12.grade as stu1_grade2 
    FROM course c1,course c2, student stu1, report r11, section s11, report r12, section s12
	  
    WHERE stu1.sID = r11.snum		/* stu1 report on lower level course C1 */
    and r11.secnum = s11.secnum
    and r11.term = s11.term 
    and s11.cnum = c1.cnum
    and stu1.sID = r12.snum       /* stu1 report on higher level course C2 */
    and r12.secnum = s12.secnum
    and r12.term = s12.term 
    and s12.cnum = c2.cnum
    and c1.dept = c2.dept
    and c2.level > c1.level
    and c1.cnum = s11.cnum
    and c2.cnum = s12.cnum
    and r11.grade > r12.grade
    ORDER BY stu1.Sid;

    /* Table to large*/

Q8: Find all pairs of one professor and one student who each took at least two identical courses (possibly different secnums and different terms) in the same department and who got the same grade in the lower level course but different grades in the higher level course.
Retrieve and print the pID of the prof, the sID of the student, their last names, the cnum, secnum, term, and grade of each of the courses they took.  
e.g. in the current dataset, professor Ali and student Lincoln satisfy this query.
    
    SELECT distinct stu1.sID as pID,stu1.lastname as prof, c1.cnum as course1, c1.level as lev1,
    r11.secnum as sec1,r11.term as term1,r11.grade as grade1, c2.cnum as course2, c2.level as lev2, r12.secnum as sec2,r12.term as term2, r12.grade as grade2, stu2.sID as sIDt,
    stu2.lastname as student, c1.cnum as course21 ,r21.secnum as sec21, r21.term as term21, r21.grade as grade21, c2.cnum as course22, r22.secnum as sec22, r22.term as term22,
    r22.grade as grade22 

    FROM student stu1, report r11, section s11, course c1, report r12, section s12, course c2, 
    student stu2, report r21, section s21, report r22, section s22 

    WHERE stu1.sID in (select pID from prof)            /* requires that the prof be a student */
    and stu2.sID in (select sID from student)
    and  stu1.sID = r11.snum
    and r11.secnum = s11.secnum
    and r11.term = s11.term 
    and s11.cnum = c1.cnum
    and stu1.sID = r12.snum
    and r12.secnum = s12.secnum
    and r12.term = s12.term 
    and s12.cnum = c2.cnum
    and c1.dept = c2.dept
    and c2.level > c1.level
    and stu2.sID = r21.snum
    and r21.secnum = s21.secnum
    and r21.term = s21.term 
    and stu2.sID = r22.snum
    and r22.secnum = s22.secnum
    and r22.term = s22.term 
    and c1.cnum = s21.cnum
    and c2.cnum = s22.cnum
    and r11.grade = r21.grade
    and r12.grade < r22.grade
    and r11.snum <> r21.snum;

    /*Table too large*/
